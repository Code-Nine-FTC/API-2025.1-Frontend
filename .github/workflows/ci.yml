name: CI Principal Frontend/Feature/Hotfix

on:
  push:
    branches:
      - feature/**
      - hotfix/**

jobs:
  commit-check:
    name: Verify Commit Messages
    if: startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Commit message verification
        run: |
          echo "üîç Verificando mensagens de commit..."
          commits=$(git log --format=%s -n 10 --no-merges)
          regex="^(feat|fix|docs|style|refactor|test|chore|build): .+|^Merge .+"
      
          echo "$commits" | while IFS= read -r commit; do
            echo "üîç Commit encontrado: '$commit'"
            if ! [[ "$commit" =~ $regex ]]; then
              echo "‚ùå Commit inv√°lido!: '$commit'"
              echo "Os commits devem seguir o padr√£o: 'type: description'"
              exit 1
            fi
          done
          echo "‚úÖ Todos os commits est√£o v√°lidos!"

  develop-pipeline:
    name: Develop Branch Validation
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './tecsus/package.json'

      - name: Install dependencies
        working-directory: ./tecsus
        run: npm install

      - name: Run Linting
        working-directory: ./tecsus
        run: npm run lint

      - name: Run Unit Tests
        working-directory: ./tecsus
        run: npm run test

      - name: Build Project
        working-directory: ./tecsus
        run: npm run build

      - name: Delivery Validation
        run: |
          echo "‚úÖ Valida√ß√£o de entregas executada com sucesso!"
          echo "Pipeline OK para merge em develop"

  feature-hotfix-pipeline:
    name: Feature/Hotfix Pipeline
    if: startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './tecsus/package.json'

      - name: Install dependencies
        working-directory: ./tecsus
        run: npm install

      - name: Run Linting
        working-directory: ./tecsus
        run: |
          echo "üîç Executando lint..."
          npm run lint

      - name: Run Unit Tests
        working-directory: ./tecsus
        run: |
          echo "üß™ Executando testes unit√°rios..."
          npm run test
          
      - name: Check Build
        working-directory: ./tecsus
        run: |
          echo "üèóÔ∏è Verificando se o projeto pode ser compilado..."
          npm run build

  release-pipeline:
    name: Release Pipeline
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './tecsus/package.json'

      - name: Install dependencies
        working-directory: ./tecsus
        run: npm install

      - name: Run Linting
        working-directory: ./tecsus
        run: npm run lint

      - name: Run Unit Tests
        working-directory: ./tecsus
        run: npm run test

      - name: Build Project
        working-directory: ./tecsus
        run: npm run build
        
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: ./tecsus/dist

jobs:
  commit-message-check: 
    runs-on: ubuntu-latest  

    steps:
    - name: Repository checkout
      uses: actions/checkout@v4  

    - name: Commit message verification
      run: |
        echo "Verificando mensagens de commit..."
        commits=$(git log --format=%s -n 10 --no-merges)
        regex="^(feat|fix|docs|style|refactor|test|chore|build): .+|^Merge .+"
    
        echo "$commits" | while IFS= read -r commit; do
            echo "üîç Commit encontrado: '$commit'"
            if ! [[ "$commit" =~ $regex ]]; then
            echo "‚ùå Commit inv√°lido!: '$commit'"
            echo "Os commits devem seguir o padr√£o: 'type: description'"
            exit 1
            fi
        done
  
  feature-hotfix-pipeline:
    name: Feature/Hotfix Pipeline
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        echo "Instalando depend√™ncias..."
        npm install

    - name: Run Linter
      run: |
        echo "Executando linter..."
        npm run lint

    - name: Run tests
      run: |
        echo "Executando testes..."
        npm test